#: import Window kvimports.Window
<Root>:
	loop: True

	canvas.before:
		Color:
			rgb: (0.5, 0.5, 0.5)
		Rectangle:
			size: self.size

	QuestionMenu
	MedalMenu

<MedalMenu@BoxLayout>:
	orientation: "vertical"
	padding: dp(10)
	spacing: dp(10)

	PlayerBox:
		player_name: "Player 1"

	PlayerBox
		player_name: "Player 2"

	PlayerBox
		player_name: "Player 3"

	PlayerBox
		player_name: "Player 4"

	PlayerBox
		player_name: "Player 5"


<WinPopup>:
	title_size: sp(30)
	title_color: (0, 0, 0)
	size_hint: 0.9, 0.5
	background: ""
	background_color: (0.95, 0.95, 0.95)

	FloatLayout:
		Image:
			size_hint: None, 1/2
			width: self.height
			source: "./Win/confetti.zip"
			opacity: 0.7
			anim_delay: 0.1
			pos_hint: {"x": 0, "y": 0}

		Label:
			text: "Você demonstrou grande conhecimento sobre as diferentes áreas de aprendizado e assim ganhou esta partida!"
			font_size: sp(30)
			text_size: self.size
			color: (0, 0, 0)
			halign: "center"
			valign: "center"
			pos_hint: {"center_x": 0.5, "center_y": 0.5}


<PlayerBox>:
	orientation: "vertical"

	canvas.before:
		Color:
			rgb: (0, 0, 0)
		Line:
			rectangle: (self.x, self.y, self.width, self.height)


<PlayerTextInput>:
	font_size: dp(25)
	color: (1, 1, 1)
	multiline: False
	size_hint_y: None
	height: self.minimum_height


<MedalCheckbox>:
	source: "./medal_checkbox_normal.png"
	size_hint_y: None
	height: self.width
	pos_hint: {"center_y": 0.5}
	color: app.category_colors.get(self.category, (1, 1, 1))


<QuestionMenu@BoxLayout>:
	orientation: "vertical"
	padding: dp(10)
	spacing: dp(50)

	GridLayout:
		rows: 6
		size_hint_y: 4/5
		spacing: dp(10)

		QuestionButton:
			category: "art"
		QuestionButton:
			category: "geography"
		QuestionButton:
			category: "history"
		QuestionButton:
			category: "informatic"
		QuestionButton:
			category: "math"
		QuestionButton:
			category: "science"

	FloatLayout:
		size_hint_y: 1/5

		DiceButton:
			dice_image: dice_image.__self__
			size_hint_x: None
			width: self.height
			pos_hint: {"x": 0, "y": 0}
			background_normal: ""
			background_down: ""
			background_color: 0, 0, 0, 0

			Image:
				id: dice_image
				source: "./Dice/animation.zip"
				anim_delay: -1
				size: self.parent.size
				pos: self.parent.pos

				canvas.before:
					PushMatrix
					Rotate:
						angle: self.parent.angle
						axis: 0, 0, 1
						origin: self.center
				canvas.after:
					PopMatrix

		Button:
			# TODO: add image to the reset button
			on_release: app.reset_game()
			size_hint_x: None
			width: self.height
			pos_hint: {"right": 1, "y": 0}


<QuestionButton>:
	text: (self.category).upper()
	font_size: sp(20)
	color: (1, 1, 1)
	background_color: (0, 0, 0, 0)
	canvas.before:
		Color:
			rgb: app.category_colors.get(self.category, (0, 0, 0))
		Rectangle:
			pos: self.pos
			size: self.size
			source: "./Questions/question_button.png"


<QuestionCard>:
	qa_label: qa_label.__self__
	text_label: text_label.__self__
	icon_image: icon_image
	on_release: root.flip_card()
	orientation: "vertical"

	canvas.before:
		PushMatrix
		Rotate:
			angle: self.angle
			axis: 0, 1, 0
			origin: self.center
		Color:
			rgb: app.category_colors.get(self.category, (0, 0, 0))
		RoundedRectangle:
			radius: [20]
			size: self.size
			pos: self.pos
		PopMatrix

	BoxLayout:
		size_hint_y: 2/5

		Label:
			id: qa_label
			text: "Pergunta"
			font_size: sp(35)
			italic: True
			color: (0.9, 0.9, 0.9)
			text_size: self.size
			halign: "center"
			valign: "center"
		Image:
			id: icon_image
			# TODO: create icon for each category
			source: "" # "./Icons/" + root.category + ".png"
			keep_ratio: True
			allow_stretch: True
			size_hint_x: None
			width: self.height

	Label:
		id: text_label
		text: root.question
		font_size: sp(22)
		text_size: self.size
		halign: "center"
		valign: "center"
		padding: (dp(10), dp(10))